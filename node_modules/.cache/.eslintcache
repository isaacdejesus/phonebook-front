[{"/home/isaac/git/react_stuff/phonebook/phonebook-front/src/index.js":"1","/home/isaac/git/react_stuff/phonebook/phonebook-front/src/App.js":"2","/home/isaac/git/react_stuff/phonebook/phonebook-front/src/components/PersonForm.js":"3","/home/isaac/git/react_stuff/phonebook/phonebook-front/src/services/persons.js":"4","/home/isaac/git/react_stuff/phonebook/phonebook-front/src/components/Records.js":"5","/home/isaac/git/react_stuff/phonebook/phonebook-front/src/components/BadNotif.js":"6","/home/isaac/git/react_stuff/phonebook/phonebook-front/src/components/GoodNotif.js":"7"},{"size":173,"mtime":1649797678450,"results":"8","hashOfConfig":"9"},{"size":4449,"mtime":1650069145505,"results":"10","hashOfConfig":"9"},{"size":711,"mtime":1649797678450,"results":"11","hashOfConfig":"9"},{"size":757,"mtime":1649958137196,"results":"12","hashOfConfig":"9"},{"size":356,"mtime":1649797678450,"results":"13","hashOfConfig":"9"},{"size":221,"mtime":1649797678450,"results":"14","hashOfConfig":"9"},{"size":225,"mtime":1649797678450,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dfykvg",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/isaac/git/react_stuff/phonebook/phonebook-front/src/index.js",[],[],"/home/isaac/git/react_stuff/phonebook/phonebook-front/src/App.js",["39"],[],"import {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport personsService from './services/persons.js'\nimport PersonForm from './components/PersonForm.js'\nimport GoodNotif from './components/GoodNotif'\nimport BadNotif from './components/BadNotif'\nimport Records from './components/Records.js'\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newPhone, setNewPhone] = useState('')\n    const [successMsg, setSuccessMsg] = useState(null)\n    const [errMsg, setErrMsg] = useState(null)\n    useEffect(() => {\n            personsService\n            .getAll()\n            .then(response => {\n                setPersons(response)\n            })\n    }, [])\n    const handleNewPerson = (event) => {\n        setNewName(event.target.value) \n    }\n    const handleNewPhone = (event) => {\n        setNewPhone(event.target.value)\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const checkName = persons.find(person => person.name === newName)\n        if(checkName){\n            const updateNum = window.confirm(`${newName} is already in the phonebook. would you like to replace the old number with the new one?`)\n            if(!updateNum)\n                return\n            const updatedPerson = { ...checkName, number:newPhone  }\n            personsService\n                .update(checkName.id, updatedPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.map(person => person.id !== checkName.id ? person : returnedPerson))\n                    setNewName('')\n                    setNewPhone('')\n                    setSuccessMsg(`Record '${checkName.name}' successfully updated`)\n                    setTimeout(() => {\n                        setSuccessMsg(null)\n                    }, 2000)\n                })\n                .catch(error => {\n                    setErrMsg(error.response.data.error)\n                    //console.log(error.response.data)\n                    setTimeout(() => {\n                    setErrMsg(null)\n                    }, 2000);\n                    setPersons(persons.filter(person => person.id !==checkName.id))\n                    setNewName('')\n                    setNewPhone('')\n                })\n        }\n        else if(!checkName){\n        const newPerson = {\n            name: newName,\n            number: newPhone,\n            id: persons.length+ 1\n        }\n        personsService\n            .create(newPerson)\n            .then(returnedPerson => {\n                console.log(\"promise success\")\n                setPersons(persons.concat(returnedPerson))\n                setSuccessMsg(`Record '${returnedPerson.name}' has been added`)\n                setTimeout(() => {\n                    setSuccessMsg(null)\n                }, 3000)\n                setNewName('')\n                setNewPhone('')\n                //setPersons(persons.concat(newPerson))\n                })\n            .catch(error => {\n                setErrMsg(error.response.data.error)\n                console.log(error.response.data.error)\n                setTimeout(()=> {\n                    setErrMsg(null)\n                },2000)\n            })\n            }\n    }\n    const handleDel = id => {\n        const maybe = window.confirm(\"Do you really want to delete record?\")\n        if(!maybe)\n            return\n        const toDel = persons.find(person => person.id === id)\n        //console.log(toDel.name)\n        personsService\n            .del(id)\n            .then(persontoDel => {\n                setPersons(persons.filter(person => person.id !== toDel.id ))\n            })\n            .catch(error => {\n                alert(`person '${toDel.name}' has already been deleted`)\n                setPersons(persons.filter(person => person.id !== toDel.id ))\n            })\n    }\n   return(\n        <div>\n            <h2> Phonebook </h2>\n            <GoodNotif message = {successMsg}/>\n            <BadNotif message={errMsg}/>\n            <PersonForm \n                newName = {newName}\n                newPhone = {newPhone}\n                handleNewPhone = {handleNewPhone}\n                handleNewPerson = {handleNewPerson}\n                handleSubmit = {handleSubmit}\n            />\n            <h3> Records </h3>\n            <Records persons = {persons} handleDel= {handleDel}/>\n        </div>\n    )\n}\n\nexport default App\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/isaac/git/react_stuff/phonebook/phonebook-front/src/components/PersonForm.js",[],[],"/home/isaac/git/react_stuff/phonebook/phonebook-front/src/services/persons.js",["40"],[],"import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/api/records'\nconst baseUrl = '/api/records'\n//const baseUrl = 'https://damp-taiga-85250.herokuapp.com/api/records'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n} \n\nconst del = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\nexport default {getAll, update, create, del}\n","/home/isaac/git/react_stuff/phonebook/phonebook-front/src/components/Records.js",[],[],"/home/isaac/git/react_stuff/phonebook/phonebook-front/src/components/BadNotif.js",[],[],"/home/isaac/git/react_stuff/phonebook/phonebook-front/src/components/GoodNotif.js",[],[],{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":13},{"ruleId":"45","severity":1,"message":"46","line":25,"column":1,"nodeType":"47","endLine":25,"endColumn":45},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]